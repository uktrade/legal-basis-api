---

# Default compose file for development and production.
# Should be used directly in development.
# Automatically loads `docker-compose.override.yml` if it exists.
# No extra steps required.
# Should be used together with `docker/docker-compose.prod.yml`
# in production.

version: "3.6"
services:
  db:
    image: "postgres:9.6.9-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file: ./config/.env
  redis:
    image: redis
  web:
    <<: &web
      build:
        context: .
        dockerfile: ./docker/django/Dockerfile
        args:
          DJANGO_ENV: development
      volumes:
        - django-static:/var/www/django/static
        - .:/code
      depends_on:
        - db
        - redis
      env_file: ./config/.env
      environment:
        DJANGO_DATABASE_HOST: db
    command: python -Wd manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: curl --fail http://localhost:8000/health/?format=json || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks: 
      - default
      - be

# This task is an example of how to extend existing ones:
# some_worker:
#   <<: *web
#   command: python manage.py worker_process

volumes:
  pgdata:
  django-static:
  django-media:
  django-locale:

networks:
  be:
    external:
      name: data-hub-api_default